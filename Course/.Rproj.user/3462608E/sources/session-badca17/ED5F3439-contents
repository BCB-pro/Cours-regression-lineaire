---
title: "Simulation"
output: html_document
date: "2023-08-24"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
library(ggpubr)

# Simulation des variables
X <- rnorm(100, mean = 175, sd = 10)
Res <- rnorm(100, mean = 0, sd = 5)
Y <- X + Res

# Modèle de régression
model <- lm(Y ~ X)
summary(model)
data <- data.frame(X, Y)

```

# Nuage de points
```{r}
plot <- data %>% 
  ggplot(aes(x = X, y = Y))+
  geom_point(size = 2)+
  theme_classic()+
  scale_x_continuous(limits = c(145,205), n.breaks = 10)+
  scale_y_continuous(limits = c(145,205), n.breaks = 10)

ggsave("/home/baptiste.criniere/Documents/Trainings/Linear regression/Simulation/Image/Scatter_plot.png",
       plot = plot, width = 6, height = 4, dpi = 300, bg = "transparent")
```

# Equation linéaire
```{r}
plot <- data %>% 
  ggplot(aes(x = X, y = Y))+
  geom_smooth(method = "lm", se = FALSE, color = "black", size = 2)+
  theme_classic()+
  scale_x_continuous(limits = c(145,205), n.breaks = 10)+
  scale_y_continuous(limits = c(145,205), n.breaks = 10)

ggsave("/home/baptiste.criniere/Documents/Trainings/Linear regression/Simulation/Image/Equation_plot.png",
       plot = plot, width = 6, height = 4, dpi = 300, bg = "transparent")

```



# Droite horizontale
```{r}
data$fit_bis <- mean(data$Y)
plot <- data %>% 
  ggplot(aes(x = X, y = Y))+
  geom_point()+
  geom_hline(yintercept = mean(Y), color = "darkred", size = 2)+
  geom_segment(aes(xend = X, yend = fit_bis))+
  theme_classic()+
  scale_x_continuous(limits = c(145,205), n.breaks = 10)+
  scale_y_continuous(limits = c(145,205), n.breaks = 10)

ggsave("/home/baptiste.criniere/Documents/Trainings/Linear regression/Simulation/Image/Horizontal_plot.png",
       plot = plot, width = 6, height = 4, dpi = 300, bg = "transparent")
```




# Régression linéaire
```{r}
plot <- data %>% 
  ggplot(aes(x = X, y = Y))+
  geom_point()+
  geom_smooth(method = "lm", se = FALSE, color = "darkred", size = 1.2)+
  theme_classic()+
  scale_y_continuous(limits = c(130,220), n.breaks = 10)+
  labs(y = "", x = "")

plot <- ggsave("/home/baptiste.criniere/Documents/Trainings/Linear regression/Simulation/Image/reg.png",
       plot = plot, width = 6, height = 4, dpi = 1000, bg = "transparent")
```

# Régression linéaire, residus
```{r}
data$fitted3 <- 3.9 + 0.97739 * data$X

plot <- data %>% 
  ggplot(aes(x = X, y = Y))+
  geom_point()+
  geom_abline(intercept = 3.9, slope = 0.97739, color = "darkred", size = 1.2)+
  geom_segment(aes(xend = X, yend = fitted3), alpha = 0.5)+
  theme_classic()+
  scale_y_continuous(limits = c(130,220), n.breaks = 10)+
  labs(y = "", x = "")

plot <- ggsave("/home/baptiste.criniere/Documents/Trainings/Linear regression/Simulation/Image/regression_line.png",
       plot = plot, width = 6, height = 4, dpi = 1000, bg = "transparent")
```


#  la meilleure droite ?
```{r}
# Simulation
data$fitted1 <- 110 + 0.375 * data$X
data$fitted2 <- -110 + 1.625 * data$X
data$fitted3 <- 3.9 + 0.97739 * data$X

fig1 <- data %>% 
  ggplot(aes(x = X, y = Y))+
  geom_point(alpha = 0.5, size = 0.95)+
  geom_abline(intercept = 110, slope = 0.375, color = "darkred", size = 1.2)+
  geom_segment(aes(xend = X, yend = fitted1), alpha = 0.5)+
  theme_classic()+
  scale_y_continuous(limits = c(130,220), n.breaks = 10)+
  labs(x = "")


fig2 <- data %>% 
  ggplot(aes(x = X, y = Y))+
  geom_point(alpha = 0.5, size = 0.95)+
  geom_abline(intercept = -110, slope = 1.625, color = "darkred", size = 1.2)+
  geom_segment(aes(xend = X, yend = fitted2), alpha = 0.5)+
  theme_classic()+
  scale_y_continuous(limits = c(130,220), n.breaks = 10)+
  labs(y = "")


fig3 <- data %>% 
  ggplot(aes(x = X, y = Y))+
  geom_point(alpha = 0.5, size = 0.95)+
  geom_abline(intercept = 3.9, slope = 0.97739, color = "darkred", size = 1.2)+
  geom_segment(aes(xend = X, yend = fitted3), alpha = 0.5)+
  theme_classic()+
  scale_y_continuous(limits = c(130,220), n.breaks = 10)+
  labs(y = "", x = "")

plot <- ggarrange(fig1, fig2, fig3, nrow = 1)

plot <- ggsave("/home/baptiste.criniere/Documents/Trainings/Linear regression/Simulation/Image/Regression_plot.png",
       plot = plot, width = 6, height = 4, dpi = 1000, bg = "transparent")


```




# Corrélation
```{r}
set.seed(123)
data <- data.frame(x = rnorm(100))
data$y1 = data$x + rnorm(100, sd=0.1)
data$y2 = rnorm(100)

data <- data %>% 
  tidyr::pivot_longer(!x, names_to = "time", values_to = "y") %>% 
  dplyr::mutate(time = time %>% forcats::fct_recode("1" = "y1", "2" = "y2"))

# Tracer les graphiques
plot <- ggplot(data, aes(x = x, y = y)) +
  geom_point() +
  geom_smooth(method="lm", se=FALSE, color = "darkred")+
  facet_wrap(~time)+
  theme_classic()

plot <- ggsave("/home/baptiste.criniere/Documents/Trainings/Linear regression/Simulation/Image/correlation_plot.png",
       plot = plot, width = 6, height = 4, dpi = 1000, bg = "transparent")

```



# R2

```{r}
set.seed(123)
data <- mvrnorm(20, mu = c(0, 0), Sigma = matrix(c(1, 0.8, 0.8, 1), ncol = 2)) %>% 
  as.data.frame() %>% 
  dplyr::filter(V1 > 0 & V2 > 0) %>% 
  dplyr::mutate(fit1 = mean(V2)) %>% 
  dplyr::mutate(fit2 = 0.5284 + 0.4290*V1)


model <- lm(V2 ~ V1, data = data)
summary(model)

# Variance
var(data$V2)


fig1 <- data %>% 
  ggplot(aes(x= V1, y = V2))+
  geom_point()+
  geom_hline(aes(yintercept = mean(V2)), color = "darkblue", size = 2)+
  geom_segment(aes(xend = V1, yend = fit1), alpha = 0.5)+
  theme_bw()+
  theme(axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank())+
 annotate("text", x = 2, y = 0.9, label = "Var(Y) = 0.32",fontface = "bold")+
  labs(x = "Taille des souris",
       y = "Poids des souris",
       title = "Droite moyenne")

fig2 <- data %>% 
  ggplot(aes(x= V1, y = V2))+
  geom_point()+
  geom_abline(aes(intercept = 0.5284, slope = 0.4290), color = "darkred", size = 2)+
  geom_segment(aes(xend = V1, yend = fit2), alpha = 0.5)+
  annotate("text", x = 1.5, y = 1.25, label = "Var(Res) = 0.14", fontface = "bold")+
  theme_bw()+
  theme(axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank())+
  labs(x = "Taille des souris",
       y = "Poids des souris",
       title = "Régression linéaire")



plot <- ggarrange(fig1, fig2, nrow = 1)
plot <- ggsave("/home/baptiste.criniere/Documents/Trainings/Linear regression/Simulation/Image/r2_1.png",
       plot = plot, width = 6, height = 4, dpi = 1000, bg = "transparent")
```

# Hypothèse non vérifiée : résidus
```{r}
set.seed(123)

age_ranges <- list(10:14, 12:16, 14:18)
ages <- unlist(lapply(age_ranges, function(x) sample(x, 20, replace = TRUE)))
noise <- rnorm(60, 0, 2)

heights1 <- 114 + 3 * ages[1:20] + noise[1:20]
heights2 <- 124 + 3 * ages[21:40] + noise[21:40]
heights3 <- 134 + 3 * ages[41:60] + noise[41:60]
heights <- c(heights1, heights2, heights3)

data <- data.frame(Age = ages, Family = as.factor(rep(1:3, each = 20)), Height = heights)

# Figure
plot <- data %>% 
  ggplot(aes(x = Age, y = Height))+
  geom_point(aes(color = Family), size = 0.75)+
  geom_smooth(aes(group = Family, color = Family), se = FALSE, method = "lm")+
  geom_smooth(method = "lm", se = FALSE, color = "darkred", size = 1.5, linetype = "dashed")+
  scale_color_npg()+
  theme_bw()+
  labs(x = "Age",
       y = " Taille",
       color = "Famille")

plot <- ggsave("/home/baptiste.criniere/Documents/Trainings/Linear regression/Simulation/Image/dependance1.png",
       plot = plot, width = 6, height = 4, dpi = 1000, bg = "transparent")



# Résidus du modèle
model_without_family <- lm(Height ~ Age, data = data)
residuals_without_family <- residuals(model_without_family)
data$residuals_without_family <- residuals_without_family

model_with_family <- lm(Height ~ Age + Family, data = data)
residuals_with_family <- residuals(model_with_family)
data$residuals_with_family <- residuals_with_family



plot1 <- ggplot(data, aes(x = Age, y = residuals_without_family, color = Family)) + 
  geom_point() + 
  labs(title = "Résidus sans effet famille", y = "Résidus")+
  theme_bw()+
  theme(legend.position = "none")+
  scale_color_npg()+
  geom_smooth(se = FALSE)

plot <- ggsave("/home/baptiste.criniere/Documents/Trainings/Linear regression/Simulation/Image/dependance2.png",
       plot = plot, width = 6, height = 4, dpi = 1000, bg = "transparent")


plot2 <- ggplot(data, aes(x = Age, y = residuals_with_family, color = Family)) + 
  geom_point() + 
  labs(title = "Résidus avec effet famille", y = "Résidus")+
  theme_bw()+
  theme(legend.position = "none")+
  scale_color_npg()+
  geom_smooth(se = FALSE)


plot <- ggpubr::ggarrange(plot1, plot2)

plot <- ggsave("/home/baptiste.criniere/Documents/Trainings/Linear regression/Simulation/Image/dependance2.png",
       plot = plot, width = 6, height = 4, dpi = 1000, bg = "transparent")

```

# Figure linéarité
```{r}
set.seed(123)
Age <- runif(200, 10, 18)
Res <- rnorm(200, 0, 2)
Height <- -22.5 + 22.5*Age + -0.625*Age**2 + Res
data <- data.frame(Age, Height)

plot <- data %>% 
  ggplot(aes(x = Age, y = Height))+
  geom_point(alpha = 0.75, size = 1)+
  geom_smooth(method = "lm", se = FALSE, color = "darkred")+
  theme_bw()+
  labs(y = "Taille")
plot <- ggsave("/home/baptiste.criniere/Documents/Trainings/Linear regression/Simulation/Image/linearite1.png",
       plot = plot, width = 6, height = 4, dpi = 1000, bg = "transparent")

model <- lm(Height ~ Age, data = data)
data$res <- residuals(model)

plot1 <- data %>% 
  ggplot(aes(x = 1:200, y = res))+
  geom_point()+
  theme_bw()+
  labs(x = "Observations",
       y = "Résidus")

data$pred <- predict(model)
plot2 <- data %>% 
  ggplot(aes(x = pred, y = res))+
  geom_point()+
  geom_smooth(se = FALSE, color = "darkred")+
  labs(x = "Valeurs prédites",
       y = "Résidus")+
  theme_bw()

plot <- ggpubr::ggarrange(plot1, plot2)
plot <- ggsave("/home/baptiste.criniere/Documents/Trainings/Linear regression/Simulation/Image/linearite2.png",
       plot = plot2, width = 6, height = 4, dpi = 1000, bg = "transparent")

```

# Avec une courbe incurvée
```{r}
set.seed(123)
Age <- runif(200, 10, 18)
Res <- rnorm(200, 0, 2)
Height <- -22.5 + 22.5*Age + -0.625*Age**2 + Res
data <- data.frame(Age, Height)


curve <- function(x){
  return(-22.5 + 22.5*x + -0.625*x**2)
}

plot <- data %>% 
  ggplot(aes(x = Age, y = Height))+
  geom_point()+
  stat_function(fun = curve, color = "darkred", size = 1.5)+
  labs(x = "Age",
       y = "Taille")+
  theme_bw()
plot <- ggsave("/home/baptiste.criniere/Documents/Trainings/Linear regression/Simulation/Image/linearite3.png",
       plot = plot, width = 6, height = 4, dpi = 1000, bg = "transparent")


model <- lm(Height ~ Age + I(Age**2), data = data)
summary(model)
data$res <- residuals(model)

plot <- data %>% 
  ggplot(aes(x = pred, y = res))+
  geom_point()+
  geom_smooth(se = FALSE, color = "darkred")+
  labs(x = "Valeurs prédites",
       y = "Résidus")+
  theme_bw()

data$pred <- predict(model)
plot <- ggsave("/home/baptiste.criniere/Documents/Trainings/Linear regression/Simulation/Image/linearite4.png",
       plot = plot, width = 6, height = 4, dpi = 1000, bg = "transparent")

```

# Variances égales
```{r}
# Temps de réaction en fonction de l'âge
set.seed(123)

Age <- sort(runif(100, 20, 80))
Res <- unlist(lapply(seq(0.25, 1, 0.25), function(X) rnorm(25, 0, X)))
Tps <- 0.5 + 0.05*Age + Res

data <- data.frame(Age, Tps)

plot <- data %>% 
  ggplot(aes(x = Age, y = Tps))+
  geom_point()+
  geom_smooth(method = "lm", se = FALSE, color = "darkred")+
  theme_bw()+
  labs(x = "Age",
       y = "Temps de réaction")
plot <- ggsave("/home/baptiste.criniere/Documents/Trainings/Linear regression/Simulation/Image/variance1.png",
       plot = plot, width = 6, height = 4, dpi = 1000, bg = "transparent")




model <- lm(Tps ~ Age, data = data)
summary(model)

data$Res <- residuals(model)

plot <- data %>% 
  ggplot(aes(x = Age, y = Res))+
  geom_point()+
  theme_bw()+
  labs(x = "Age",
       y = "Résidus")

plot <- ggsave("/home/baptiste.criniere/Documents/Trainings/Linear regression/Simulation/Image/variance2.png",
       plot = plot, width = 6, height = 4, dpi = 1000, bg = "transparent")

plot <- data %>% 
  ggplot(aes(x = Age, y = log(Tps)))+
  geom_point()+
  geom_smooth(method = "lm", se = FALSE, color = "darkred")+
  theme_bw()+
  labs(x = "Age",
       y = "log Temps de réaction")
plot <- ggsave("/home/baptiste.criniere/Documents/Trainings/Linear regression/Simulation/Image/variance3.png",
       plot = plot, width = 6, height = 4, dpi = 1000, bg = "transparent")

model <- lm(log(Tps) ~ Age, data = data)
summary(model)

data$Res <- residuals(model)

plot <- data %>% 
  ggplot(aes(x = Age, y = Res))+
  geom_point()+
  theme_bw()+
  labs(x = "Age",
       y = "Résidus")

plot <- ggsave("/home/baptiste.criniere/Documents/Trainings/Linear regression/Simulation/Image/variance4.png",
       plot = plot, width = 6, height = 4, dpi = 1000, bg = "transparent")
```

# Valeurs extrême
```{r}
# Taille age
set.seed(123)
Age <- runif(24, 10, 18)
Res <- rnorm(24, 0, 4)
Height <- 90 + 5*Age + Res
Age[25] <- 10
Height[25] <- 190
Age[26] <- 18
Height[26] <- 145
data <- data.frame(Age, Height)




plot <- data %>% 
  dplyr::mutate(Extreme = ifelse(Height > 185 | (Height < 150 & Age > 17), "yes", "no")) %>% 
  ggplot(aes(x = Age, y = Height))+
  geom_point(aes(color = Extreme), size = 1.5)+
  geom_smooth(method = "lm", se = FALSE, color = "darkred")+
  theme_bw()+
  theme(legend.position = "none")+
  scale_color_manual(values = c("black", "peru"))
plot <- ggsave("/home/baptiste.criniere/Documents/Trainings/Linear regression/Simulation/Image/extreme.png",
       plot = plot, width = 6, height = 4, dpi = 1000, bg = "transparent")

```

#
