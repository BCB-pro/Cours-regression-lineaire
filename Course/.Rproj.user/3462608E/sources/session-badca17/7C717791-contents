---
title: "Analyse Biologique"
author: "Baptiste Crinière-Boizet"
output:
  html_document:
    theme: united
    toc: true
    toc_float: true
    number_sections: true
    # includes:
    #   after_body: tabset-dropdown.html
---
<style>
/* Notwendiges Zeug für Dropdowns */
.tabset-dropdown > .nav-tabs {
	display: inline-block;
	max-height: 200px;
	min-height: 44px;
	overflow-y: auto;
	background: white;
	border: 1px solid #ddd;
	border-radius: 4px;
}

.tabset-dropdown > .nav-tabs > li.active:before {
    content: "";
    font-family: 'Glyphicons Halflings';
    display: inline-block;
    padding: 10px;
    border-right: 1px solid #ddd;
}

.tabset-dropdown > .nav-tabs.nav-tabs-open > li.active:before {
	content: "&#xe258;";
	border: none;
}

.tabset-dropdown > .nav-tabs.nav-tabs-open:before {
	content: "";
    font-family: 'Glyphicons Halflings';
    display: inline-block;
    padding: 10px;
    border-right: 1px solid #ddd;
}


.tabset-dropdown > .nav-tabs > li.active {
	display: block;
}

.tabset-dropdown > .nav-tabs > li > a,
.tabset-dropdown > .nav-tabs > li > a:focus,
.tabset-dropdown > .nav-tabs > li > a:hover {
	border: none;
	display: inline-block;
	border-radius: 4px;
}

.tabset-dropdown > .nav-tabs.nav-tabs-open > li {
	display: block;
	float: none;
}

.tabset-dropdown > .nav-tabs > li {
	display: none;
}
</style>



```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r echo=FALSE, message=FALSE, warning=FALSE}
library(tidyverse)
library(ggsci)
```

```{r echo=FALSE, message=FALSE, warning=FALSE}
# Data importation
data <- data.frame()
identifiant <- c("AL", "RK", "PT", "ML", "MA", "PC", "RZ", "TH", "SL", "OL1", "OL3", "PB", "LJ", "BI", "CM")
for (i in 1:15){
  data_bis <- openxlsx::read.xlsx("/home/baptiste.criniere/Documents/PB_CC_MLG_2/Data/Biologie/BIO2.xlsx", sheet = i, na.strings = c("NA", "ND"))
  data_bis$ID <- identifiant[i]
  names(data_bis)[2:3] <- c("crise", "nb_crise")
  data <- rbind(data, data_bis)
}
data <- data %>% 
  dplyr::mutate(nb_crise = nb_crise %>% as.numeric) %>% 
  dplyr::mutate(crise = ifelse(crise %in% c("1", "oui", "oiu", "3", "8"), "oui", crise)) %>% 
  dplyr::mutate(crise = ifelse(crise %in% c("0", "non"), "non", crise)) %>% 
  dplyr::mutate(crise = crise %>% factor)


# Test par indicateur biologique
indicateurs <- c("Temperature", "Glycemie", "FOUR_score", "RASS_scale", "Na", "Uree",
                 "PaO2", "PaCO2", "Mg", "Ca", "pH")

names(data)[26:28] <- c("edc", "sepsis", "insuff.rénale")
# Aide
# https://stackoverflow.com/questions/71083881/dropdown-selector-in-r-markdown-html-output-without-shniy
```


# Première partie : Utilisation des données brutes
Dans cette partie j'ai utilisé uniquement les observations pour lesquelles l'indicateur biologique a été mesuré (par exemple pour la température j'ai utlisé seulement les températures pour lesquelles la variables TemperatureMeasured valait 1).

## Indicateurs biologiques (présence/absence de crise)

### Modélisation table des résultats
On construit un modèle afin de mesurer le lien entre les différents indicateurs biologiques et la présence ou l'absence de crise, en tenant compte que les données soient regroupées par patients.
```{r echo=FALSE, message=FALSE, warning=FALSE}
# Modèle absence/présence de crise
dt1 <- data.frame(indicateurs = indicateurs, pvalue = NA, effect = NA)

for (i in 1:nrow(dt1)){
  var <- dt1$indicateurs[i]
  var_measured <- paste0(var, "Measured")
  ldt <- data %>% 
    dplyr::select(crise, nb_crise, var , var_measured, ID) %>% 
    dplyr::filter(get(var_measured) %in% 1)
  
  formule <- paste0("crise ~ (1 | ID) + ", var)
  model <- lme4::glmer(formula = formule, data = ldt, family = binomial(link = "logit"))
  a <- summary(model)
  
  dt1$effect[i] <- a$coefficients[2,1]
  dt1$pvalue[i] <- a$coefficients[2,4]
}

dt1 %>% 
  dplyr::mutate(pvalue = pvalue %>% round(3)) %>% 
  dplyr::mutate(effect = effect %>% round(3)) %>% 
  DT::datatable(rownames = F,
                extensions = "Buttons",
                options = list(pageLength = 15,
                             dom = "Blfrtip",
                             buttons = c("copy", "csv", "excel")))
```

### Description par indicateurs biologiques {.tabset .tabset-dropdown}

#### Température {.tabset}

##### Boxplot général
```{r echo=FALSE, message=FALSE, warning=FALSE}
fig <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(TemperatureMeasured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(Temperature, na.rm = TRUE)) %>% 
  ggplot(aes(x = crise, y = moyenne, text = ID))+
  geom_boxplot(aes(color = crise), outlier.shape = NA)+
  geom_point(alpha = 0.5)+
  geom_line(aes(group = ID), alpha = 0.2)+
  scale_color_jama()+
  theme_classic()+
  labs(y = "Température moyenne par sujet")+
  theme(legend.position = "none")

fig <- plotly::ggplotly(fig, width = 500, height = 450)
htmltools::div(fig,align="center")
```

##### Boxplot par sujet
```{r echo=FALSE, message=FALSE, warning=FALSE, fig.align='center'}
data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(TemperatureMeasured %in% 1) %>% 
  ggplot(aes(x = ID, y = Temperature, color = crise))+
  geom_boxplot(position=position_dodge(width=1), outlier.shape = NA, width = 0.8)+
  geom_jitter(position = position_jitterdodge(dodge.width = 1, jitter.width = 0.3), alpha = 0.3)+
  theme_classic()+
  scale_color_jama()+
  labs(y = "Température")
```

##### Table
```{r echo=FALSE, message=FALSE, warning=FALSE}
resume <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(TemperatureMeasured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(Temperature, na.rm = TRUE)) 

resume %>% 
  dplyr::mutate(moyenne = moyenne %>% round(2)) %>% 
  DT::datatable(rownames = F,
                extensions = "Buttons",
                options = list(pageLength = 10,
                             dom = "Blfrtip",
                             buttons = c("copy", "csv", "excel")))
```

#### Glycémie {.tabset}

##### Boxplot général
```{r echo=FALSE, message=FALSE, warning=FALSE}
fig <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(GlycemieMeasured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(Glycemie, na.rm = TRUE)) %>% 
  ggplot(aes(x = crise, y = moyenne, text = ID))+
  geom_boxplot(aes(color = crise), outlier.shape = NA)+
  geom_point(alpha = 0.5)+
  geom_line(aes(group = ID), alpha = 0.2)+
  scale_color_jama()+
  theme_classic()+
  labs(y = "Glycémie moyenne par sujet")+
  theme(legend.position = "none")

fig <- plotly::ggplotly(fig, width = 500, height = 450)
htmltools::div(fig,align="center")
```

##### Boxplot par sujet
```{r echo=FALSE, message=FALSE, warning=FALSE, fig.align='center'}
data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(GlycemieMeasured %in% 1) %>% 
  ggplot(aes(x = ID, y = Glycemie, color = crise))+
  geom_boxplot(position=position_dodge(width=1), outlier.shape = NA, width = 0.8)+
  geom_jitter(position = position_jitterdodge(dodge.width = 1, jitter.width = 0.3), alpha = 0.3)+
  theme_classic()+
  scale_color_jama()+
  labs(y = "Glycémie")
```

##### Table
```{r echo=FALSE, message=FALSE, warning=FALSE}
resume <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(GlycemieMeasured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(Glycemie, na.rm = TRUE)) 

resume %>% 
  dplyr::mutate(moyenne = moyenne %>% round(2)) %>% 
  DT::datatable(rownames = F,
                extensions = "Buttons",
                options = list(pageLength = 10,
                             dom = "Blfrtip",
                             buttons = c("copy", "csv", "excel")))
```

#### FOUR score {.tabset}

##### Boxplot général
```{r echo=FALSE, message=FALSE, warning=FALSE}
fig <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(FOUR_scoreMeasured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(FOUR_score, na.rm = TRUE)) %>% 
  ggplot(aes(x = crise, y = moyenne, text = ID))+
  geom_boxplot(aes(color = crise), outlier.shape = NA)+
  geom_point(alpha = 0.5)+
  geom_line(aes(group = ID), alpha = 0.2)+
  scale_color_jama()+
  theme_classic()+
  labs(y = "FOUR score moyenne par sujet")+
  theme(legend.position = "none")

fig <- plotly::ggplotly(fig, width = 500, height = 450)
htmltools::div(fig,align="center")
```

##### Boxplot par sujet
```{r echo=FALSE, message=FALSE, warning=FALSE, fig.align='center'}
data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(FOUR_scoreMeasured %in% 1) %>% 
  ggplot(aes(x = ID, y = FOUR_score, color = crise))+
  geom_boxplot(position=position_dodge(width=1), outlier.shape = NA, width = 0.8)+
  geom_jitter(position = position_jitterdodge(dodge.width = 1, jitter.width = 0.3), alpha = 0.3)+
  theme_classic()+
  scale_color_jama()+
  labs(y = "FOUR score")
```

##### Table
```{r echo=FALSE, message=FALSE, warning=FALSE}
resume <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(FOUR_scoreMeasured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(FOUR_score, na.rm = TRUE)) 

resume %>% 
  dplyr::mutate(moyenne = moyenne %>% round(2)) %>% 
  DT::datatable(rownames = F,
                extensions = "Buttons",
                options = list(pageLength = 10,
                             dom = "Blfrtip",
                             buttons = c("copy", "csv", "excel")))
```

#### RASS scale {.tabset}

##### Boxplot général
```{r echo=FALSE, message=FALSE, warning=FALSE}
fig <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(RASS_scaleMeasured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(RASS_scale, na.rm = TRUE)) %>% 
  ggplot(aes(x = crise, y = moyenne, text = ID))+
  geom_boxplot(aes(color = crise), outlier.shape = NA)+
  geom_point(alpha = 0.5)+
  geom_line(aes(group = ID), alpha = 0.2)+
  scale_color_jama()+
  theme_classic()+
  labs(y = "RASS scale moyenne par sujet")+
  theme(legend.position = "none")

fig <- plotly::ggplotly(fig, width = 500, height = 450)
htmltools::div(fig,align="center")
```

##### Boxplot par sujet
```{r echo=FALSE, message=FALSE, warning=FALSE, fig.align='center'}
data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(RASS_scaleMeasured %in% 1) %>% 
  ggplot(aes(x = ID, y = RASS_scale, color = crise))+
  geom_boxplot(position=position_dodge(width=1), outlier.shape = NA, width = 0.8)+
  geom_jitter(position = position_jitterdodge(dodge.width = 1, jitter.width = 0.3), alpha = 0.3)+
  theme_classic()+
  scale_color_jama()+
  labs(y = "RASS scale")
```

##### Table
```{r echo=FALSE, message=FALSE, warning=FALSE}
resume <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(RASS_scaleMeasured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(RASS_scale, na.rm = TRUE)) 

resume %>% 
  dplyr::mutate(moyenne = moyenne %>% round(2)) %>% 
  DT::datatable(rownames = F,
                extensions = "Buttons",
                options = list(pageLength = 10,
                             dom = "Blfrtip",
                             buttons = c("copy", "csv", "excel")))
```

#### Na {.tabset}

##### Boxplot général
```{r echo=FALSE, message=FALSE, warning=FALSE}
fig <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(NaMeasured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(Na, na.rm = TRUE)) %>% 
  ggplot(aes(x = crise, y = moyenne, text = ID))+
  geom_boxplot(aes(color = crise), outlier.shape = NA)+
  geom_point(alpha = 0.5)+
  geom_line(aes(group = ID), alpha = 0.2)+
  scale_color_jama()+
  theme_classic()+
  labs(y = "Na moyenne par sujet")+
  theme(legend.position = "none")

fig <- plotly::ggplotly(fig, width = 500, height = 450)
htmltools::div(fig,align="center")
```

##### Boxplot par sujet
```{r echo=FALSE, message=FALSE, warning=FALSE, fig.align='center'}
data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(NaMeasured %in% 1) %>% 
  ggplot(aes(x = ID, y = Na, color = crise))+
  geom_boxplot(position=position_dodge(width=1), outlier.shape = NA, width = 0.8)+
  geom_jitter(position = position_jitterdodge(dodge.width = 1, jitter.width = 0.3), alpha = 0.3)+
  theme_classic()+
  scale_color_jama()+
  labs(y = "Na")
```

##### Table
```{r echo=FALSE, message=FALSE, warning=FALSE}
resume <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(NaMeasured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(Na, na.rm = TRUE)) 

resume %>% 
  dplyr::mutate(moyenne = moyenne %>% round(2)) %>% 
  DT::datatable(rownames = F,
                extensions = "Buttons",
                options = list(pageLength = 10,
                             dom = "Blfrtip",
                             buttons = c("copy", "csv", "excel")))
```

#### Urée {.tabset}

##### Boxplot général
```{r echo=FALSE, message=FALSE, warning=FALSE}
fig <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(UreeMeasured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(Uree, na.rm = TRUE)) %>% 
  ggplot(aes(x = crise, y = moyenne, text = ID))+
  geom_boxplot(aes(color = crise), outlier.shape = NA)+
  geom_point(alpha = 0.5)+
  geom_line(aes(group = ID), alpha = 0.2)+
  scale_color_jama()+
  theme_classic()+
  labs(y = "Urée moyenne par sujet")+
  theme(legend.position = "none")

fig <- plotly::ggplotly(fig, width = 500, height = 450)
htmltools::div(fig,align="center")
```

##### Boxplot par sujet
```{r echo=FALSE, message=FALSE, warning=FALSE, fig.align='center'}
data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(UreeMeasured %in% 1) %>% 
  ggplot(aes(x = ID, y = Uree, color = crise))+
  geom_boxplot(position=position_dodge(width=1), outlier.shape = NA, width = 0.8)+
  geom_jitter(position = position_jitterdodge(dodge.width = 1, jitter.width = 0.3), alpha = 0.3)+
  theme_classic()+
  scale_color_jama()+
  labs(y = "Urée")
```

##### Table
```{r echo=FALSE, message=FALSE, warning=FALSE}
resume <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(UreeMeasured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(Uree, na.rm = TRUE)) 

resume %>% 
  dplyr::mutate(moyenne = moyenne %>% round(2)) %>% 
  DT::datatable(rownames = F,
                extensions = "Buttons",
                options = list(pageLength = 10,
                             dom = "Blfrtip",
                             buttons = c("copy", "csv", "excel")))
```

#### PaO2 {.tabset}

##### Boxplot général
```{r echo=FALSE, message=FALSE, warning=FALSE}
fig <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(PaO2Measured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(PaO2, na.rm = TRUE)) %>% 
  ggplot(aes(x = crise, y = moyenne, text = ID))+
  geom_boxplot(aes(color = crise), outlier.shape = NA)+
  geom_point(alpha = 0.5)+
  geom_line(aes(group = ID), alpha = 0.2)+
  scale_color_jama()+
  theme_classic()+
  labs(y = "PaO2 moyenne par sujet")+
  theme(legend.position = "none")

fig <- plotly::ggplotly(fig, width = 500, height = 450)
htmltools::div(fig,align="center")
```

##### Boxplot par sujet
```{r echo=FALSE, message=FALSE, warning=FALSE, fig.align='center'}
data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(PaO2Measured %in% 1) %>% 
  ggplot(aes(x = ID, y = PaO2, color = crise))+
  geom_boxplot(position=position_dodge(width=1), outlier.shape = NA, width = 0.8)+
  geom_jitter(position = position_jitterdodge(dodge.width = 1, jitter.width = 0.3), alpha = 0.3)+
  theme_classic()+
  scale_color_jama()+
  labs(y = "PaO2")
```

##### Table
```{r echo=FALSE, message=FALSE, warning=FALSE}
resume <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(PaO2Measured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(PaO2, na.rm = TRUE)) 

resume %>% 
  dplyr::mutate(moyenne = moyenne %>% round(2)) %>% 
  DT::datatable(rownames = F,
                extensions = "Buttons",
                options = list(pageLength = 10,
                             dom = "Blfrtip",
                             buttons = c("copy", "csv", "excel")))
```

#### PaCO2 {.tabset}

##### Boxplot général
```{r echo=FALSE, message=FALSE, warning=FALSE}
fig <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(PaCO2Measured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(PaCO2, na.rm = TRUE)) %>% 
  ggplot(aes(x = crise, y = moyenne, text = ID))+
  geom_boxplot(aes(color = crise), outlier.shape = NA)+
  geom_point(alpha = 0.5)+
  geom_line(aes(group = ID), alpha = 0.2)+
  scale_color_jama()+
  theme_classic()+
  labs(y = "PaCO2 moyenne par sujet")+
  theme(legend.position = "none")

fig <- plotly::ggplotly(fig, width = 500, height = 450)
htmltools::div(fig,align="center")
```

##### Boxplot par sujet
```{r echo=FALSE, message=FALSE, warning=FALSE, fig.align='center'}
data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(PaCO2Measured %in% 1) %>% 
  ggplot(aes(x = ID, y = PaCO2, color = crise))+
  geom_boxplot(position=position_dodge(width=1), outlier.shape = NA, width = 0.8)+
  geom_jitter(position = position_jitterdodge(dodge.width = 1, jitter.width = 0.3), alpha = 0.3)+
  theme_classic()+
  scale_color_jama()+
  labs(y = "PaCO2")
```

##### Table
```{r echo=FALSE, message=FALSE, warning=FALSE}
resume <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(PaCO2Measured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(PaCO2, na.rm = TRUE)) 

resume %>% 
  dplyr::mutate(moyenne = moyenne %>% round(2)) %>% 
  DT::datatable(rownames = F,
                extensions = "Buttons",
                options = list(pageLength = 10,
                             dom = "Blfrtip",
                             buttons = c("copy", "csv", "excel")))
```

#### Mg {.tabset}

##### Boxplot général
```{r echo=FALSE, message=FALSE, warning=FALSE}
fig <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(MgMeasured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(Mg, na.rm = TRUE)) %>% 
  ggplot(aes(x = crise, y = moyenne, text = ID))+
  geom_boxplot(aes(color = crise), outlier.shape = NA)+
  geom_point(alpha = 0.5)+
  geom_line(aes(group = ID), alpha = 0.2)+
  scale_color_jama()+
  theme_classic()+
  labs(y = "Mg moyenne par sujet")+
  theme(legend.position = "none")

fig <- plotly::ggplotly(fig, width = 500, height = 450)
htmltools::div(fig,align="center")
```

##### Boxplot par sujet
```{r echo=FALSE, message=FALSE, warning=FALSE, fig.align='center'}
data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(MgMeasured %in% 1) %>% 
  ggplot(aes(x = ID, y = Mg, color = crise))+
  geom_boxplot(position=position_dodge(width=1), outlier.shape = NA, width = 0.8)+
  geom_jitter(position = position_jitterdodge(dodge.width = 1, jitter.width = 0.3), alpha = 0.3)+
  theme_classic()+
  scale_color_jama()+
  labs(y = "Mg")
```

##### Table
```{r echo=FALSE, message=FALSE, warning=FALSE}
resume <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(MgMeasured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(Mg, na.rm = TRUE)) 

resume %>% 
  dplyr::mutate(moyenne = moyenne %>% round(2)) %>% 
  DT::datatable(rownames = F,
                extensions = "Buttons",
                options = list(pageLength = 10,
                             dom = "Blfrtip",
                             buttons = c("copy", "csv", "excel")))
```

#### Ca {.tabset}

##### Boxplot général
```{r echo=FALSE, message=FALSE, warning=FALSE}
fig <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(CaMeasured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(Ca, na.rm = TRUE)) %>% 
  ggplot(aes(x = crise, y = moyenne, text = ID))+
  geom_boxplot(aes(color = crise), outlier.shape = NA)+
  geom_point(alpha = 0.5)+
  geom_line(aes(group = ID), alpha = 0.2)+
  scale_color_jama()+
  theme_classic()+
  labs(y = "Ca moyenne par sujet")+
  theme(legend.position = "none")

fig <- plotly::ggplotly(fig, width = 500, height = 450)
htmltools::div(fig,align="center")
```

##### Boxplot par sujet
```{r echo=FALSE, message=FALSE, warning=FALSE, fig.align='center'}
data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(CaMeasured %in% 1) %>% 
  ggplot(aes(x = ID, y = Ca, color = crise))+
  geom_boxplot(position=position_dodge(width=1), outlier.shape = NA, width = 0.8)+
  geom_jitter(position = position_jitterdodge(dodge.width = 1, jitter.width = 0.3), alpha = 0.3)+
  theme_classic()+
  scale_color_jama()+
  labs(y = "Ca")
```

##### Table
```{r echo=FALSE, message=FALSE, warning=FALSE}
resume <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(CaMeasured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(Ca, na.rm = TRUE)) 

resume %>% 
  dplyr::mutate(moyenne = moyenne %>% round(2)) %>% 
  DT::datatable(rownames = F,
                extensions = "Buttons",
                options = list(pageLength = 10,
                             dom = "Blfrtip",
                             buttons = c("copy", "csv", "excel")))
```

#### pH {.tabset}

##### Boxplot général
```{r echo=FALSE, message=FALSE, warning=FALSE}
fig <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(pHMeasured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(pH, na.rm = TRUE)) %>% 
  ggplot(aes(x = crise, y = moyenne, text = ID))+
  geom_boxplot(aes(color = crise), outlier.shape = NA)+
  geom_point(alpha = 0.5)+
  geom_line(aes(group = ID), alpha = 0.2)+
  scale_color_jama()+
  theme_classic()+
  labs(y = "pH moyenne par sujet")+
  theme(legend.position = "none")

fig <- plotly::ggplotly(fig, width = 500, height = 450)
htmltools::div(fig,align="center")
```

##### Boxplot par sujet
```{r echo=FALSE, message=FALSE, warning=FALSE, fig.align='center'}
data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(pHMeasured %in% 1) %>% 
  ggplot(aes(x = ID, y = pH, color = crise))+
  geom_boxplot(position=position_dodge(width=1), outlier.shape = NA, width = 0.8)+
  geom_jitter(position = position_jitterdodge(dodge.width = 1, jitter.width = 0.3), alpha = 0.3)+
  theme_classic()+
  scale_color_jama()+
  labs(y = "pH")
```

##### Table
```{r echo=FALSE, message=FALSE, warning=FALSE}
resume <- data %>% 
  dplyr::mutate(ID = ID %>% factor) %>% 
  dplyr::filter(!is.na(crise)) %>% 
  dplyr::filter(pHMeasured %in% 1) %>% 
  dplyr::group_by(ID, crise) %>% 
  dplyr::summarise(Nb = n(),
                   moyenne = mean(pH, na.rm = TRUE)) 

resume %>% 
  dplyr::mutate(moyenne = moyenne %>% round(2)) %>% 
  DT::datatable(rownames = F,
                extensions = "Buttons",
                options = list(pageLength = 10,
                             dom = "Blfrtip",
                             buttons = c("copy", "csv", "excel")))
```

## Indicateurs biologiques (nombre de crises)

### Modélisation table des résultats
On construit un modèle afin de mesurer le lien entre les différents indicateurs biologiques et le nombre de crise, en tenant compte que les données soient regroupées par patients.
\
*Note : on passe par une transformation racine carrée*
```{r echo=FALSE, message=FALSE, warning=FALSE}
# Modèle nombre de crise
dt2 <- data.frame(indicateurs = indicateurs, pvalue = NA, effect = NA)

for (i in 1:nrow(dt2)){
  var <- dt2$indicateurs[i]
  var_measured <- paste0(var, "Measured")
  ldt <- data %>% 
    dplyr::select(crise, nb_crise, var , var_measured, ID) %>% 
    dplyr::filter(get(var_measured) %in% 1 & !is.na(nb_crise) & nb_crise > 0)
  
  formule <- paste0("sqrt(nb_crise) ~ (1 | ID) + ", var)
  model <- lmerTest::lmer(formula = formule, data = ldt)
  a <- summary(model)
  
  dt2$effect[i] <- a$coefficients[2,1]
  dt2$pvalue[i] <- a$coefficients[2,5]
}

dt2 %>% 
  dplyr::mutate(pvalue = pvalue %>% round(3)) %>% 
  dplyr::mutate(effect = effect %>% round(3)) %>% 
  DT::datatable(rownames = F,
                extensions = "Buttons",
                options = list(pageLength = 15,
                             dom = "Blfrtip",
                             buttons = c("copy", "csv", "excel")))
```

```{r}
var <- "RASS_scale"
ldt <- data %>% 
    dplyr::select(crise, nb_crise, var , var_measured, ID) %>% 
    dplyr::filter(get(var_measured) %in% 1 & !is.na(nb_crise) & nb_crise > 0)
  
model <- lmerTest::lmer(sqrt(nb_crise) ~ Temperature + (1|ID), data = ldt)
summary(model)


ldt %>% 
  ggplot(aes(x = RASS_scale, y = sqrt(nb_crise)))+
  geom_point(alpha = 0.5)+
  theme_classic()+
  geom_smooth(method = "lm", se = FALSE)


```


<!-- # ```{r echo=FALSE, message=FALSE, warning=FALSE} -->
<!-- # # RASS_scale -->
<!-- # ldt <- data %>%  -->
<!-- #   dplyr::select(crise, nb_crise, PaCO2, PaCO2Measured, ID) %>%  -->
<!-- #   dplyr::filter(PaCO2Measured %in% 1 & !is.na(nb_crise) & nb_crise > 0) -->
<!-- #  -->
<!-- # model <- lmerTest::lmer(sqrt(nb_crise) ~ PaCO2 + (1 | ID), data = ldt) -->
<!-- # summary(model) -->
<!-- # ggResidpanel::resid_panel(model) -->
<!-- # ldt %>%  -->
<!-- #   ggplot(aes(x = PaCO2, y = sqrt(nb_crise)))+ -->
<!-- #   geom_count(alpha = 0.1)+ -->
<!-- #   geom_smooth(aes(group = ID), method = "lm", se = FALSE, color = "black", size = 0.5)+ -->
<!-- #   theme_bw() -->
<!-- # ``` -->

## Traitement des variables binaires : edc, sepsis, insuff rénal

### edc {.tabset}
```{r echo=FALSE, message=FALSE, warning=FALSE, results='hide'}
ldt <- data %>% 
  dplyr::select(crise, nb_crise, edc, sepsis, insuff.rénale, ID) %>% 
  dplyr::mutate(edc = ifelse(edc %in% "TRUE", "vrai", edc))

model <- lme4::glmer(crise ~ edc + (1|ID), family = binomial(), data = ldt)
summary(model)

ldt1 <- ldt %>% 
  filter(nb_crise > 0)
model <- lmerTest::lmer(sqrt(nb_crise) ~ edc + (1|ID), data = ldt1)
summary(model)
# ggResidpanel::resid_panel(model)
```

#### Table descriptive
```{r message=FALSE, warning=FALSE, echo=FALSE}
ldt %>% 
  dplyr::group_by(ID, edc) %>% 
  dplyr::filter(nb_crise > 0) %>% 
  dplyr::summarise(nombre = n(),
                   moyenne = mean(nb_crise, na.rm = TRUE)) %>% 
  dplyr::mutate(moyenne = moyenne %>% round(2)) %>% 
  DT::datatable(rownames = F,
                extensions = "Buttons",
                options = list(pageLength = 10,
                             dom = "Blfrtip",
                             buttons = c("copy", "csv", "excel")))
```

#### Figure 1
```{r message=FALSE, warning=FALSE, echo=FALSE}
fig <- ldt %>% 
  dplyr::group_by(ID, edc) %>% 
  dplyr::filter(nb_crise > 0) %>% 
  dplyr::summarise(nombre = n(),
                   moyenne = mean(nb_crise, na.rm = TRUE)) %>% 
  dplyr::filter(!is.na(edc)) %>% 
  ggplot(aes(x = edc, y = sqrt(moyenne)))+
  geom_boxplot(aes(color = edc), outlier.shape = NA)+
  geom_point(alpha = 0.5)+
  geom_line(aes(group = ID), alpha = 0.2)+
  theme_classic()+
  scale_color_jama()+
  theme(legend.position = "none")+
  labs(y = "Nombre de crises (racine carée)")

fig <- plotly::ggplotly(fig, width = 500, height = 450)
htmltools::div(fig,align="center")
```

#### Figure 2
```{r message=FALSE, warning=FALSE, echo=FALSE, fig.align='center'}
ldt %>% 
  dplyr::filter(nb_crise > 0) %>% 
  ggplot(aes(x = ID, y = sqrt(nb_crise), color = edc))+
  geom_boxplot(position=position_dodge(width=1), outlier.shape = NA, width = 0.8)+
  geom_jitter(position = position_jitterdodge(dodge.width = 1, jitter.width = 0.3), alpha = 0.2)+
  theme_classic()+
  scale_color_jama()+
  labs(y = "Nombre de crises (racine carée)")
```

### sepsis {.tabset}
Il n'y pas de lien entre sepsis et la présence ou l'absence et le nombre de crise.

```{r echo=FALSE, message=FALSE, warning=FALSE, results='hide'}
ldt <- data %>% 
  dplyr::select(crise, nb_crise, edc, sepsis, insuff.rénale, ID)

model <- lme4::glmer(crise ~ sepsis + (1|ID), family = binomial(), data = ldt)
summary(model)

ldt1 <- ldt %>% 
  filter(nb_crise > 0)
model <- lmerTest::lmer(sqrt(nb_crise) ~ sepsis + (1|ID), data = ldt1)
summary(model)
# ggResidpanel::resid_panel(model)
```

#### Table descriptive
```{r message=FALSE, warning=FALSE, echo=FALSE}
ldt %>% 
  dplyr::group_by(ID, sepsis) %>% 
  dplyr::filter(nb_crise > 0) %>% 
  dplyr::summarise(nombre = n(),
                   moyenne = mean(nb_crise, na.rm = TRUE)) %>% 
  dplyr::mutate(moyenne = moyenne %>% round(2)) %>% 
  DT::datatable(rownames = F,
                extensions = "Buttons",
                options = list(pageLength = 10,
                             dom = "Blfrtip",
                             buttons = c("copy", "csv", "excel")))
```

#### Figure 1
```{r message=FALSE, warning=FALSE, echo=FALSE}
fig <- ldt %>% 
  dplyr::group_by(ID, sepsis) %>% 
  dplyr::filter(nb_crise > 0) %>% 
  dplyr::summarise(nombre = n(),
                   moyenne = mean(nb_crise, na.rm = TRUE)) %>% 
  dplyr::filter(!is.na(sepsis)) %>% 
  ggplot(aes(x = sepsis, y = sqrt(moyenne)))+
  geom_boxplot(aes(color = sepsis), outlier.shape = NA)+
  geom_point(alpha = 0.5)+
  geom_line(aes(group = ID), alpha = 0.2)+
  theme_classic()+
  scale_color_jama()+
  theme(legend.position = "none")+
  labs(y = "Nombre de crises (racine carée")

fig <- plotly::ggplotly(fig, width = 500, height = 450)
htmltools::div(fig,align="center")
```

#### Figure 2
```{r message=FALSE, warning=FALSE, echo=FALSE, fig.align='center'}
ldt %>% 
  dplyr::filter(nb_crise > 0) %>% 
  ggplot(aes(x = ID, y = sqrt(nb_crise), color = sepsis))+
  geom_boxplot(position=position_dodge(width=1), outlier.shape = NA, width = 0.8)+
  geom_jitter(position = position_jitterdodge(dodge.width = 1, jitter.width = 0.3), alpha = 0.2)+
  theme_classic()+
  scale_color_jama()+
  labs(y = "Nombre de crises (racine carée)")
```

### Insufissance rénale  {.tabset}
On ne peut pas évaluer le lien entre l'insuffisance rénale et l'absence/présence de crise car on ne dispose pas suffisament d'observation.
```{r echo=FALSE, message=FALSE, warning=FALSE, results='hide'}
ldt <- data %>%
  dplyr::select(crise, nb_crise, edc, sepsis, insuff.rénale, ID)

model <- lme4::glmer(crise ~ insuff.rénale + (1|ID), family = binomial(), data = ldt)
summary(model)

ldt1 <- ldt %>%
  filter(nb_crise > 0)
model <- lmerTest::lmer(sqrt(nb_crise) ~ insuff.rénale + (1|ID), data = ldt1)
summary(model)
# ggResidpanel::resid_panel(model)
```

#### Table descriptive
```{r message=FALSE, warning=FALSE, echo=FALSE}
ldt %>%
  dplyr::group_by(ID, insuff.rénale) %>%
  dplyr::filter(nb_crise > 0) %>%
  dplyr::summarise(nombre = n(),
                   moyenne = mean(nb_crise, na.rm = TRUE)) %>%
  dplyr::mutate(moyenne = moyenne %>% round(2)) %>%
  DT::datatable(rownames = F,
                extensions = "Buttons",
                options = list(pageLength = 10,
                             dom = "Blfrtip",
                             buttons = c("copy", "csv", "excel")))
```

#### Figure 1
```{r message=FALSE, warning=FALSE, echo=FALSE}
fig <- ldt %>%
  dplyr::group_by(ID, insuff.rénale) %>%
  dplyr::filter(nb_crise > 0) %>%
  dplyr::summarise(nombre = n(),
                   moyenne = mean(nb_crise, na.rm = TRUE)) %>%
  dplyr::filter(!is.na(insuff.rénale)) %>%
  ggplot(aes(x = insuff.rénale, y = sqrt(moyenne)))+
  geom_boxplot(aes(color = insuff.rénale), outlier.shape = NA)+
  geom_point(alpha = 0.5)+
  geom_line(aes(group = ID), alpha = 0.2)+
  theme_classic()+
  scale_color_jama()+
  theme(legend.position = "none")+
  labs(y = "Nombre de crises (racine carée)")


fig <- plotly::ggplotly(fig, width = 500, height = 450)
htmltools::div(fig,align="center")
```

#### Figure 2
```{r message=FALSE, warning=FALSE, echo=FALSE, fig.align='center'}
ldt %>%
  dplyr::filter(nb_crise > 0) %>%
  ggplot(aes(x = ID, y = sqrt(nb_crise), color = insuff.rénale))+
  geom_boxplot(position=position_dodge(width=1), outlier.shape = NA, width = 0.8)+
  geom_jitter(position = position_jitterdodge(dodge.width = 1, jitter.width = 0.3), alpha = 0.2)+
  theme_classic()+
  scale_color_jama()+
  labs(y = "Nombre de crises (racine carée)")
```



<!-- # On moyenne sur un nombre d'heure -->

<!-- ## Moyenne par heure -->
<!-- ```{r warning=FALSE, message=FALSE, echo=FALSE} -->
<!-- moyenne_heure <- function(data, Indicateur, h){ -->
<!--   data2 <- data.frame(Indicateur = NULL, "Crise" = NULL, id = NULL) -->
<!--   id <- unique(data$ID) -->
<!--   for (identifiant in id){ -->
<!--     data_bis <- data %>%  -->
<!--       dplyr::filter(ID %in% identifiant) %>%  -->
<!--       dplyr::select(nb_crise, Indicateur, ID) -->
<!--     vecteur <- colMeans(matrix(data_bis[, Indicateur], nrow = h), na.rm = TRUE) -->
<!--     crise <- colMeans(matrix(data_bis$nb_crise, nrow = h), na.rm = TRUE) -->
<!--     ID <- data_bis$ID[1] -->
<!--     data_ter <- data.frame(Indicateur = vecteur, "Crise" = crise, "id" = rep(ID, length(vecteur))) -->
<!--     data2 <- rbind(data2, data_ter) -->
<!--   } -->
<!--   names(data2)[1] <- Indicateur -->
<!--   return(data2) -->
<!-- } -->

<!-- ``` -->

<!-- ### Température -->
<!-- ```{r} -->
<!-- df1 <- moyenne_heure(data, "Temperature", 3) -->
<!-- df1 <- df1 %>%  -->
<!--   dplyr::filter(Crise >= 1) -->
<!-- model <- lmerTest::lmer(sqrt(Crise) ~ Temperature + (1|id), data = df1) -->
<!-- summary(model) -->
<!-- # ggResidpanel::resid_panel(model) -->
<!-- ``` -->
