---
title: "Clinique"
output:
  html_document:
    theme: united
    toc: true
    toc_float: true
    df_print: paged
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r echo = FALSE,warning=FALSE, message=FALSE, results='hide', fig.align='center', fig.width = 11, fig.height = 5}
library(tidyverse)
library(kableExtra)
library(forcats)
library(ggpubr)

data <- openxlsx::read.xlsx("/home/baptiste.criniere/Documents/PB_CC_MLG_2/Data/Clinique/database_EME.xlsx", sheet = 1,
                            na.strings = "ND")
nom <- c("Groupe", "ID", "Mode_entree", "Orientation", "Duree_reaneuro", "Duree_rea", "Age", "Sexe", "IMC",
         "ATCD_med", "ATCD_chir", "ATCD_neuro", "ATCD_psy", "ATCD_cardio", "Toxique", "Traitement", "TTTS",
         "Index_charlson", "ATCD_epilpsie", "Facteur_declenchant", "Duree_EME", "Lieu_diag", "Nb_AE", "Delai_EEG", "Duree_EEG",
         "Duree_ventilation", "Score_GCS", "Score_FOUR", "IGS2_score", "EME", "Etiologie", "NORSE", "mRankin_T0", "GOS_T0",
         "mRankin_Discharge", "GOS_Discharge", "mRankin_m6", "GOS_m6", "DCD")
names(data) <- nom
```

## Table 1 : tableau descriptif des données en fonction du groupe
On décrit chaque variable en fonction du groupe NC ou CC. Puis on réalise un test de Wilcoxon lorsque la variable est continue et un test de Fisher lorsque la variable est catégorielle.
```{r echo = FALSE,warning=FALSE, message=FALSE, fig.align='center', fig.width=11}
data <- data %>% 
  dplyr::mutate(Groupe = Groupe %>% factor()) %>% 
  dplyr::mutate(Mode_entree = Mode_entree %>% 
                  factor %>% 
                  forcats::fct_recode("Entrée directe" = "1", 
                                      "Transfert d'une autre réa" = "2",
                                      "Transfert autre service" = "3")) %>% 
  dplyr::mutate(Orientation = Orientation %>% 
                  factor %>% 
                  forcats::fct_recode("Sortie directe" = "1",
                                      "Transfert vers une autre réa" = "2",
                                      "Transfert vers salle de médecine" = "3",
                                      "Décès" = "4")) %>%
  dplyr::mutate(Sexe = Sexe %>% 
                 factor %>% 
                 forcats::fct_recode("H" = "0",
                                     "F" = "1")) %>% 
  dplyr::mutate(ATCD_med = ATCD_med %>% 
                  factor %>% 
                  forcats::fct_recode("Oui" = "1",
                                      "Non" = "0")) %>% 
  dplyr::mutate(ATCD_chir = ATCD_chir %>% 
                  factor %>% 
                  forcats::fct_recode("Oui" = "1",
                                      "Non" = "0")) %>% 
  dplyr::mutate(ATCD_neuro = ATCD_neuro %>% 
                  factor %>% 
                  forcats::fct_recode("Oui" = "1",
                                      "Non" = "0")) %>% 
  dplyr::mutate(ATCD_psy = ATCD_psy %>% 
                  factor %>% 
                  forcats::fct_recode("Oui" = "1",
                                      "Non" = "0")) %>% 
  dplyr::mutate(ATCD_cardio = ATCD_cardio %>% 
                  factor %>% 
                  forcats::fct_recode("Oui" = "1",
                                      "Non" = "0")) %>% 
  dplyr::mutate(Toxique = Toxique %>% 
                  factor %>% 
                  forcats::fct_recode("Oui" = "1",
                                      "Non" = "0")) %>% 
  dplyr::mutate(Traitement = Traitement %>% 
                  factor) %>% 
  dplyr::mutate(ATCD_epilpsie = ATCD_epilpsie %>% 
                  factor %>% 
                  forcats::fct_recode("Oui" = "1",
                                      "Non" = "0")) %>% 
  dplyr::mutate(Facteur_declenchant = Facteur_declenchant %>% 
                  factor %>% 
                  forcats::fct_recode("Oui" = "1",
                                      "Non" = "0")) %>% 
  dplyr::mutate(Lieu_diag = Lieu_diag %>% 
                  factor %>% 
                  forcats::fct_recode("Extrahospitalier" = "1",
                                      "Urgence" = "2",
                                      "Salle d'hospitalisation ou USC" = "3")) %>% 
  dplyr::mutate(EME = EME %>% 
                  factor %>% 
                  forcats::fct_recode("réfractaire" = "0",
                                      "super réfracteur" = "1",
                                      "super réfracteur prolongé" = "2")) %>% 
  dplyr::mutate(Etiologie = Etiologie %>% 
                  factor) %>% 
  dplyr::mutate(NORSE = NORSE %>% 
                  factor %>% 
                  forcats::fct_recode("Oui" = "1",
                                      "Non" = "0")) %>% 
  dplyr::mutate(DCD = DCD %>% 
                  factor %>% 
                  forcats::fct_recode("Oui" = "1",
                                      "Non" = "0")) %>% 
  dplyr::mutate(Nb_AE = as.numeric(Nb_AE))

  


  

a <- data %>% 
  furniture::table1(
    "Mode d'entrée en réa" = Mode_entree,
    "Orientation" = Orientation,
    "Durée du séjour en réa neuro" = Duree_reaneuro,
    "Durée du séjour en réa" = Duree_rea,
    Age,
    Sexe,
    "atcdts médicaux" = ATCD_med,
    "atcdts chirurgicaux" = ATCD_chir,
    "atcdts neurochirurgicaux" = ATCD_neuro,
    "atcdts psychiatriques" = ATCD_psy,
    "atcdts cardiovasculaire" = ATCD_cardio,
    Toxique,
    "Traitement habituel" = Traitement,
    TTTS,
    "Index Charlson" = Index_charlson,
    "atcdts épilepsie" = ATCD_epilpsie,
    "Facteur déclenchant" = Facteur_declenchant,
    "Durée EME" = Duree_EME,
    "Lieu du diagnostic" = Lieu_diag,
    "Nb AE à la sortie de réa" = Nb_AE,
    "Délai de mise en place EEG" = Delai_EEG,
    "Durée EEG" = Duree_EEG,
    "Durée ventilation mécanique" = Duree_ventilation,
    "Score GCS à l'admission" = Score_GCS,
    "Score FOUR à l'admission" = Score_FOUR,
    "IGS2 score" = IGS2_score,
    "Catégorie EME" = EME,
    Etiologie,
    NORSE,
    "mRankin T0" = mRankin_T0,
    "GOS T0" = GOS_T0,
    "mRankin Discharge" = mRankin_Discharge,
    "GOS Discharge" = GOS_Discharge,
    "mRankin m6" = mRankin_m6,
    "GOS m6" = GOS_m6,
    "Décès" = DCD,
    splitby = ~ Groupe,
    test = TRUE,
    na.rm = FALSE)

a <- data.frame(a)



# Ne pas tester
## Mode entrée en réa
a[2,4] <- round(fisher.test(table(data$Groupe, data$Mode_entree))$p.value, 3)

## Orientation
a[7,4] <- round(fisher.test(table(data$Groupe, data$Orientation))$p.value, 3)

## Durée neuro réa
a[13,4] <- round(wilcox.test(Duree_reaneuro ~ Groupe, data)$p.value, 3)

## Durée réa
a[15,4] <- round(wilcox.test(Duree_rea ~ Groupe, data)$p.value, 3)

## Age
a[17,4] <- round(wilcox.test(Age ~ Groupe, data)$p.value, 3)

## Sexe
a[19,4] <- ""

## atcdts médicaux
a[23,4] <- round(fisher.test(table(data$Groupe, data$ATCD_med))$p.value, 3)


## atcdts chir
a[27,4] <- round(fisher.test(table(data$Groupe, data$ATCD_chir))$p.value, 3)

## atcdts neuro
a[31,4] <- round(fisher.test(table(data$Groupe, data$ATCD_neuro))$p.value, 3)

## atcdts psy
a[35,4] <- round(fisher.test(table(data$Groupe, data$ATCD_psy))$p.value, 3)

## ATCD_cardio
a[39,4] <- round(fisher.test(table(data$Groupe, data$ATCD_cardio))$p.value, 3)

## Toxique
a[43,4] <- round(fisher.test(table(data$Groupe, data$Toxique))$p.value, 3)

## Traitement
a[47,4] <- round(fisher.test(table(data$Groupe, data$Traitement))$p.value, 3)

## TTTS
a[51,4] <- round(wilcox.test(TTTS ~ Groupe, data)$p.value, 3)

## Index_charlson
a[53,4] <- round(wilcox.test(Index_charlson ~ Groupe, data)$p.value, 3)

## ATCD_epilpsie
a[55,4] <- round(fisher.test(table(data$Groupe, data$ATCD_epilpsie))$p.value, 3)

## Facteur_declenchant
a[59,4] <- round(fisher.test(table(data$Groupe, data$Facteur_declenchant))$p.value, 3)

## Duree_EME
a[63,4] <- round(wilcox.test(Duree_EME ~ Groupe, data)$p.value, 3)

## Facteur_declenchant
a[65,4] <- round(fisher.test(table(data$Groupe, data$Lieu_diag))$p.value, 3)

## Nb_AE
a[70,4] <- round(wilcox.test(Nb_AE ~ Groupe, data)$p.value, 3)

## Delai_EEG
a[72,4] <- round(wilcox.test(Delai_EEG ~ Groupe, data)$p.value, 3)

## Duree_EEG
a[74,4] <- round(wilcox.test(Duree_EEG ~ Groupe, data)$p.value, 3)

## Duree_ventilation
a[76,4] <- round(wilcox.test(Duree_ventilation ~ Groupe, data)$p.value, 3)

## Score_GCS
a[78,4] <- round(wilcox.test(Score_GCS ~ Groupe, data)$p.value, 3)

## Score_FOUR
a[80,4] <- round(wilcox.test(Score_FOUR ~ Groupe, data)$p.value, 3)

## IGS2_score
a[82,4] <- round(wilcox.test(IGS2_score ~ Groupe, data)$p.value, 3)

## EME
# a[84,4] <- round(fisher.test(table(data$Groupe, data$EME))$p.value, 3)

## Etiologie
a[89,4] <- round(fisher.test(table(data$Groupe, data$Etiologie))$p.value, 3)

## NORSE
a[95,4] <- round(fisher.test(table(data$Groupe, data$NORSE))$p.value, 3)

## mRankin_T0
a[99,4] <- round(wilcox.test(mRankin_T0 ~ Groupe, data)$p.value, 3)

## GOS_T0
a[101,4] <- round(wilcox.test(GOS_T0 ~ Groupe, data)$p.value, 3)

## mRankin_Discharge
a[103,4] <- round(wilcox.test(mRankin_Discharge ~ Groupe, data)$p.value, 3)

## GOS_Discharge
a[105,4] <- round(wilcox.test(GOS_Discharge ~ Groupe, data)$p.value, 3)

## mRankin_m6
a[107,4] <- round(wilcox.test(mRankin_m6 ~ Groupe, data)$p.value, 3)

## GOS_m6
a[109,4] <- round(wilcox.test(GOS_m6 ~ Groupe, data)$p.value, 3)

## DCD
a[111,4] <- round(fisher.test(table(data$Groupe, data$DCD))$p.value, 3)

names(a)[1] <- ""
names(a)[4] <- "P value"
knitr::kable(a, caption = "") %>% 
      kable_styling(bootstrap_options = c("striped", "hover")) %>% 
    kable_paper() %>%
  scroll_box(height = "680px")

```

## Etude des corrélations {.tabset .tabset-dropdown}
### Corrélation entre réa et réa neuro
```{r echo = FALSE,warning=FALSE, message=FALSE, results='hide', fig.align='center', fig.width = 11, fig.height = 5}
data %>% 
  ggplot(aes(x = Duree_reaneuro, y = Duree_rea, color = "firebrick1"))+
  geom_point(alpha = 0.8)+
  geom_smooth(method = "lm", se = FALSE)+
  theme_classic()+
  stat_cor(method = "pearson", geom = "text", size = 3.6, show.legend = FALSE)+
  theme(legend.position = "none")
```

### Corrélation entre durée EME et durée ventilation
```{r echo = FALSE,warning=FALSE, message=FALSE, results='hide', fig.align='center', fig.width = 11, fig.height = 5}
data %>% 
  ggplot(aes(x = Duree_EME, y = Duree_ventilation, color = "firebrick1"))+
  geom_point(alpha = 0.8)+
  geom_smooth(method = "lm", se = FALSE)+
  theme_classic()+
  stat_cor(method = "pearson", geom = "text", size = 3.6, show.legend = FALSE)+
  theme(legend.position = "none")
```







### Corrélation entre Score FOUR et Score GCS
```{r echo = FALSE,warning=FALSE, message=FALSE, results='hide', fig.align='center', fig.width = 11, fig.height = 5}
data %>% 
  ggplot(aes(x = Score_GCS, y = Score_FOUR, color = "firebrick1"))+
  geom_point(alpha = 0.5)+
  geom_smooth(method = "lm", se = FALSE)+
  theme_classic()+
  stat_cor(method = "pearson", geom = "text", size = 3.6, show.legend = FALSE)+
  theme(legend.position = "none")
```

### mRankin et GOS
```{r echo = FALSE,warning=FALSE, message=FALSE, results='hide', fig.align='center', fig.width = 11, fig.height = 5}
data_mRankin <- data %>% 
  dplyr::select(ID, starts_with("mRankin")) %>% 
  tidyr::gather("Time", "mRankin", -ID) %>% 
  dplyr::mutate(Time = Time %>% 
                  factor %>% 
                  forcats::fct_recode("T0" = "mRankin_T0",
                                      "Discharge" = "mRankin_Discharge",
                                      "M6" = "mRankin_m6"))

data_GOS <- data %>% 
  dplyr::select(ID, starts_with("GOS")) %>% 
  tidyr::gather("Time", "GOS", -ID) %>% 
  dplyr::mutate(Time = Time %>% 
                  factor %>% 
                  forcats::fct_recode("T0" = "GOS_T0",
                                      "Discharge" = "GOS_Discharge",
                                      "M6" = "GOS_m6"))

data_GOS %>% 
  dplyr::left_join(data_mRankin, by = c("ID", "Time")) %>% 
  ggplot(aes(x = GOS, y = mRankin, color = Time))+
  geom_jitter(alpha = 0.3)+
  geom_smooth(method = "lm", se = FALSE)+
  facet_grid(~Time)+
  stat_cor(method = "pearson", label.x = 0, label.y = 6.7,
           geom = "text", size = 3.6, show.legend = FALSE)+
  ylim(c(0,7))+
  scale_colour_manual(values = c("dodgerblue3", "orange4", "darkolivegreen"))+
  theme_bw()+
  theme(
    legend.position = "none",
    strip.text.x = element_text(size = 12, color = "white", face = "bold"),
    strip.background = element_rect(color="black", fill="#dd4814", size=1.5, linetype="solid"))

  


```


## Différence de mRankin et de GOS {.tabset}
### mRankin {.tabset}
#### Delta Rankin discharge et T0
```{r echo=FALSE, message=FALSE, fig.align='center', out.width="60%", warning=FALSE}
data <- data %>% 
  dplyr::mutate(delta_Rankin = mRankin_Discharge - mRankin_T0)


bxp <- ggboxplot(
  data, x = "Groupe", y = "delta_Rankin", color = "Groupe",
  ylab = "Difference between mRankin discharge and t0", xlab = "Groups", add = "jitter"
) + stat_compare_means(vjust = -0.4, hjust = -0.5, method = "t.test")
bxp
```



#### Delta Rankin M6 et T0
```{r echo=FALSE, message=FALSE, fig.align='center', out.width="60%", warning=FALSE}
data <- data %>% 
  dplyr::mutate(delta_Rankin = mRankin_m6 - mRankin_T0)



bxp <- ggboxplot(
  data, x = "Groupe", y = "delta_Rankin", color = "Groupe",
  ylab = "Difference between mRankin M6 and t0", xlab = "Groups", add = "jitter"
) + stat_compare_means(vjust = -0.4, hjust = -0.5, method = "t.test")
bxp
```




### GOS {.tabset}
#### Delta Rankin discharge et T0
```{r echo=FALSE, message=FALSE, fig.align='center', out.width="60%", warning=FALSE}
data <- data %>% 
  dplyr::mutate(delta_GOS = GOS_Discharge - GOS_T0)


bxp <- ggboxplot(
  data, x = "Groupe", y = "delta_GOS", color = "Groupe",
  ylab = "Difference between GOS discharge and t0", xlab = "Groups", add = "jitter"
) + stat_compare_means(vjust = -0.4, hjust = -0.5, method = "t.test")
bxp
```



#### Delta Rankin M6 et T0
```{r echo=FALSE, message=FALSE, fig.align='center', out.width="60%", warning=FALSE}
data <- data %>% 
  dplyr::mutate(delta_GOS = GOS_m6 - GOS_T0)


bxp <- ggboxplot(
  data, x = "Groupe", y = "delta_GOS", color = "Groupe",
  ylab = "Difference between GOS M6 and t0", xlab = "Groups", add = "jitter"
) + stat_compare_means(vjust = -0.4, hjust = -0.5, method = "t.test")
bxp
```

